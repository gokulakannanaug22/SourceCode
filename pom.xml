<?xml version="1.0" encoding="UTF-8"?>
<!-- BSD License Copyright (c) 2017, AT&T Intellectual Property. All other 
	rights reserved. Redistribution and use in source and binary forms, with 
	or without modification, are permitted provided that the following conditions 
	are met: 1. Redistributions of source code must retain the above copyright 
	notice, this list of conditions and the following disclaimer. 2. Redistributions 
	in binary form must reproduce the above copyright notice, this list of conditions 
	and the following disclaimer in the documentation and/or other materials 
	provided with the distribution. 3. All advertising materials mentioning features 
	or use of this software must display the following acknowledgement: This 
	product includes software developed by the AT&T. 4. Neither the name of AT&T 
	nor the names of its contributors may be used to endorse or promote products 
	derived from this software without specific prior written permission. THIS 
	SOFTWARE IS PROVIDED BY AT&T INTELLECTUAL PROPERTY ''AS IS'' AND ANY EXPRESS 
	OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
	OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN 
	NO EVENT SHALL AT&T INTELLECTUAL PROPERTY BE LIABLE FOR ANY DIRECT, INDIRECT, 
	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
	NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
	DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY 
	OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
	OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
	ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.att.idp</groupId>
	<artifactId>idp-ms-pricing-and-promotion</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<parent>
		<groupId>com.att.ajsc</groupId>
		<artifactId>sdk-java-starter-parent</artifactId>
		<version>6.1.0.4</version>
	</parent>

	<properties>
		<swagger.directory>${basedir}/target/classes/META-INF/resources/swagger</swagger.directory>
		<icd.file>service.json</icd.file>
		<!-- <icd.package>com.att.idp.ms.pricingandpromotion.service.rs</icd.package> -->
		<icd.package>com.att.idp.ms.pricingpromotion.*.*</icd.package>
		<contract.base.class>com.att.idp.ms.pricingandpromotion.service.ServiceTest</contract.base.class>
		<java.version>1.8</java.version>
		<docker.registry></docker.registry>
		<build.number>local</build.number>
		<kube.namespace>default</kube.namespace>
		<service.account>ajsc-svc</service.account>
		<mservice.name>pricing-promotion</mservice.name>
		<platform.name>idp</platform.name>
		<api.version>v1</api.version>
		<gpg.skip>true</gpg.skip>
		<docker.namespace>com-att-ajsc</docker.namespace>
		<docker-maven-plugin.version>0.4.11</docker-maven-plugin.version>
		<swagger-maven-plugin.version>3.1.3</swagger-maven-plugin.version>
		<e2e-lifecycle-mapping.version>1.0.0</e2e-lifecycle-mapping.version>
		<idp-foundation.version>1.0.0-SNAPSHOT</idp-foundation.version>
		<swagger.version>1.5.8</swagger.version>
		<jersey.version>2.24</jersey.version>
		<sdk.java.rest>6.2.0.4</sdk.java.rest>
		<jacoco.version>0.7.9</jacoco.version>
		<pmd.version>3.8</pmd.version>
		<findbugs.version>3.0.4</findbugs.version>
		<checkstyle.version>2.17</checkstyle.version>
		<jxr-plugin.version>2.3</jxr-plugin.version>
		<spring-cloud-kubernetes-core.version>0.1.6</spring-cloud-kubernetes-core.version>
		<idp-contracts-common.version>1.0.0-SNAPSHOT</idp-contracts-common.version>
		<idp-contracts.version.version>1.0.0-SNAPSHOT</idp-contracts.version.version>
		<spring-cloud-contract.version>1.1.0.RELEASE</spring-cloud-contract.version>
		<spring-cloud-contract-maven.version>1.1.0.RELEASE</spring-cloud-contract-maven.version>
	</properties>

	<developers>
		<developer>
			<id>${userId}</id>
		</developer>
	</developers>

	<dependencyManagement>
		<dependencies>
			<!-- If you're adding this dependency explicitly you have to add it *BEFORE* 
				the Release Train BOM -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-contract-dependencies</artifactId>
				<version>${spring-cloud-contract.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.att.ajsc</groupId>
			<artifactId>sdk-java-rest</artifactId>
			<version>${sdk.java.rest}</version>
		</dependency>

		<dependency>
			<groupId>com.att.idp</groupId>
			<artifactId>idp-foundation-framework</artifactId>
			<version>${idp-foundation.version}</version>
		</dependency>

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-common</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>io.fabric8</groupId>
			<artifactId>spring-cloud-kubernetes-core</artifactId>
			<version>${spring-cloud-kubernetes-core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-contract-spec</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-verifier</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>com.couchbase.client</groupId>
		    <artifactId>java-client</artifactId>
		    <version>2.2.0</version>
        </dependency>
		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-all</artifactId>
		    <version>1.10.19</version>
		    <scope>test</scope>
		</dependency>
        <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		 <dependency>
		  <groupId>javax.validation</groupId>
		  <artifactId>validation-api</artifactId>
		  <version>1.1.0.Final</version>
		</dependency> 
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
	</dependencies>
	
	<build>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${e2e-lifecycle-mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.kongchen</groupId>
										<artifactId>swagger-maven-plugin</artifactId>
										<versionRange>${swagger-maven-plugin.version}</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											findbugs-maven-plugin
										</artifactId>
										<versionRange>
											[3.0.4,)
										</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-pmd-plugin
										</artifactId>
										<versionRange>
											[3.8,)
										</versionRange>
										<goals>
											<goal>pmd</goal>
											<goal>cpd</goal>
											<goal>cpd-check</goal>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.springframework.cloud</groupId>
										<artifactId>spring-cloud-contract-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>convert</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<configuration>
					<skip>${gpg.skip}</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.github.kongchen</groupId>
				<artifactId>swagger-maven-plugin</artifactId>
				<configuration>
					<apiSources>
						<apiSource>
							<locations>${icd.package}</locations>
							<basePath>/${platform.name}/${mservice.name}/${api.version}</basePath>
							<info>
								<title>${project.artifactId} Service</title>
								<version>${project.version}</version>
							</info>
							<swaggerDirectory>${swagger.directory}</swaggerDirectory>
						</apiSource>
					</apiSources>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>exec-maven-plugin</artifactId>
				<groupId>org.codehaus.mojo</groupId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>
				<configuration>
					<imageName>${docker.namespace}/${project.name}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<serverId>docker-hub</serverId>
					<registryUrl>https://${docker.registry}</registryUrl>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					<forceTags>true</forceTags>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>etc/config/*</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>

				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>

						</goals>
						<configuration>
							<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.version}</version>
				<configuration>
					<includeTests>true</includeTests>
					<minimumTokens>100</minimumTokens>
					<linkXref>true</linkXref>
					<targetJdk>${java.version}</targetJdk>
					<rulesets>
						<ruleset>IDP-PMD-Rules.xml</ruleset>
					</rulesets>
					<excludes>
						<exclude>**/*Test.java</exclude>
						<exclude>**/generated/*.java</exclude>
					</excludes>
					<excludeRoots>
						<excludeRoot>target/stubs</excludeRoot>
					</excludeRoots>
					<failOnViolation>true</failOnViolation>
				</configuration>
				<executions>
					<!-- <execution>
						<phase>validate</phase>
						<goals>
							<goal>pmd</goal>
							<goal>cpd</goal>
							<goal>cpd-check</goal>
							<goal>check</goal>
						</goals>
					</execution> -->
				</executions>
			</plugin>
			<!-- To use the plugin goals in your POM or parent POM -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs.version}</version>
				<configuration>
					<!-- Enables analysis which takes more memory but finds more bugs. If 
						you run out of memory, changes the value of the effort element to 'Low'. -->
					<effort>Max</effort>
					<!-- Build doesn't fail if problems are found -->
					<failOnError>false</failOnError>
					<!-- Reports all bugs (other values are medium and max) -->
					<threshold>Low</threshold>
					<!-- Produces XML report -->
					<xmlOutput>true</xmlOutput>
					<!-- Configures the directory in which the XML report is created -->
					<findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
				</configuration>
				<executions>
					<!-- Ensures that FindBugs inspects source code when project is compiled. -->

					<execution>
						<id>analyze-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.version}</version>
				<configuration>
					<configLocation>/CheckStyleGooglePlusIDP.xml</configLocation>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.0</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>analyze-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>checkstyle</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-contract-maven-plugin</artifactId>
				<version>${spring-cloud-contract-maven.version}</version>

				<extensions>true</extensions>
				<configuration>
					<baseClassForTests>${contract.base.class}</baseClassForTests>
					<testMode>EXPLICIT</testMode>
					<contractDependency>
						<groupId>com.att.idp</groupId>
						<artifactId>idp-contracts</artifactId>
						<version>${idp-contracts.version}</version>
						<scope>compile</scope>
					</contractDependency>
					<contractsWorkOffline>true</contractsWorkOffline>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.att.idp</groupId>
						<artifactId>idp-contracts-common</artifactId>
						<version>${idp-contracts-common.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<!-- mention the logback.xml location through system property or environment 
			variable to edit logback.xml at run time -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
			<resource>
				<directory>${basedir}/etc</directory>
				<targetPath>${basedir}/target/etc</targetPath>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
	</build>
	<reporting>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${jxr-plugin.version}</version>
				<configuration>
					<includes>
						<include>**/*.java</include>
					</includes>
					<linkJavadoc>true</linkJavadoc>
					<javadocDir>${project.build.directory}/apidocs</javadocDir>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs.version}</version>
			</plugin>
		</plugins>

	</reporting>

	<name>idp-ms-pricing-and-promotion</name>
<!-- 
	<repositories>
		<repository>
			<id>central</id>
			<url>http://mavencentral.it.att.com:8084/nexus/content/repositories/att-public-group</url>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>
		<repository>
			<id>att-public-nexus</id>
			<name>att-public-group</name>
			<url>http://mavencentral.it.att.com:8084/nexus/content/repositories/att-public-group</url>
			<snapshots>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>
-->
</project>
